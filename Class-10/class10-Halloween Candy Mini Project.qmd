---
title: "Class 10: Haloween Candy Mini Project"
author: "Toheeb Balogun"
format: html
editor: visual
---

#Background

In this mini-project we will examine 538 Halloween Candy data. What is your favorite candy? What is nougat anyway? And how do you say it in America?

First step is to read the data

```{r}
candy <- read.csv("candy-data.txt", row.names=1)
head(candy)
```

Q1. How many different candy types are in this dataset? Answer:85

```{r}
nrow(candy)
```

Q2. How many fruity candy types are in the dataset? Answer: 38

```{r}
sum(candy$fruity)
```

Q3. What is your favorite candy in the dataset and what is it's winpercent value? Answer: 39.46056

```{r}
#rownames(candy)
candy["Dum Dums", ]$winpercent
```

Q4: What is the winpercent value for "Kit Kat"? Answer: 76.7686

```{r}
candy["Kit Kat", ]$winpercent
```

Q5: What is the winpercent value for "Tootsie Roll Snack Bars"? Answer:49.6535

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

```{r}
library("skimr")
skim(candy)
```

Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset? Answer: Winpercent

Q7: Q7. What do you think a zero and one represent for the candy\$chocolate column? Answer: Zero means FALSE while one means TRUE

```{r}
candy$chocolate
```

Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent) + 
  geom_histogram(bins=10, col="red", fill="yellow")
```

Q9. Is the distribution of winpercent values symmetrical? Answer: The distribution of winpercent is not symmetric #The centre is the highest point Q10. Is the center of the distribution above or below 50%? Answer:The centre of distribution is below 50% Q11. On average is chocolate candy higher or lower ranked than fruit candy? Answer:The chocolate candy is higher ranked than fruit candy

```{r}
chocolate.inds <- as.logical(candy$chocolate)
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```

And for fruit candy

```{r}
fruiti.inds <-  as.logical(candy$fruity)
fruiti.win <- candy[fruiti.inds,]$winpercent
mean(fruiti.win)
```

Q12. Is this difference statistically significant? Answer: There is significant different which means chocolate is better than fruiti

```{r}
t.test(chocolate.win, fruiti.win)
```

# Overall candy rating

The base R `sort()` and `order` functions are very useful

```{r}
x <- c(5,1,2,6)
sort(x, decreasing = T)
```

```{r}
x[order(x)]
```

```{r}
y <- c("berry", "alice", "chandra")
y
sort(y)
order(y)
```

Q13. What are the five least liked candy types in this set? First, I want to order/manage the whole dataset by winpercent values

```{r}
inds <- order(candy$winpercent)
head (candy[inds,], n=5)
#candy[inds,]
```

```{r}
#head(candy[order(candy$winpercent),], n=5)
```

Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
inds <- order(candy$winpercent, decreasing = T)
head (candy[inds,], n=5)
```

#Barplot The default barplot, made with `geom_col` has the bars in the order they are in the dataset Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
#library(ggplot2)
ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
    aes(winpercent, reorder( rownames(candy), winpercent)) +
    geom_col()
```

How to make high quality plots for publication

```{r}
ggsave("mybarplot.png")
```

Time to add some useful color Let's setup a color vector (that signifies candy type) that we can then use for some future plots. We start by making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.

```{r}
my_cols <- rep("black", nrow(candy))
#my_cols
my_cols [ as.logical(candy$chocolate)] <- "chocolate"
my_cols [ as.logical(candy$bar)] <- "brown"
my_cols [ as.logical(candy$fruity)] <- "red"
my_cols
```

Now I can use this vector to color up my plot

```{r}
ggplot(candy) + 
    aes(winpercent, reorder( rownames(candy), winpercent)) +
    geom_col(fill=my_cols)
```

#4. Taking a look at pricepercent

What about value for money What is the candy for the least money?

One way to get this would be to make a plot of `winpercent` vs the `pricepercent` values

```{r}
ggplot(candy) +
         aes(winpercent, pricepercent, label=rownames(candy)) + 
  geom_point(col=my_cols) + 
  geom_text(col=my_cols)
```

This plot sucks! I cannot read the labels.... We can use ggrepl package to help with this

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 7)
```

#5 Exploring the correlation structure

```{r}
library(corrplot)
## corrplot 0.90 loaded
cij <- cor(candy)
corrplot(cij)
```

# PCA Principal Component Ananlysis

The main function that always there for us is `prcomp`. It has an important argument that is set to `scale=FALSE`

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

My PCA plot (a.k.a) PC1 vs PC2 score plot

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

I will make a "nicer" plot with ggplot. ggplot only works with data.frames as input so I need to make one for it first

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) +
  aes(PC1, PC2, label=rownames(my_data)) +
  geom_point(col=my_cols) +
geom_text_repel(col=my_cols, max.overlaps = 7)
p
```

```{r}
library(plotly)
ggplotly(p)
```
